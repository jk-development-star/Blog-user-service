
 # Project your project
service: blog-user-service
plugins:
  - serverless-jetpack
custom:
  prune:
    automatic: true
    number: 1
provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: dev
  stackName: Blog-User-Service
  role: arn:aws:iam::050752626146:role/ExecutionRoleForS3AndLambda
  memorySize: 1024
  timeout: 29
  versionFunctions: false
  endpointType: regional
  tracing:
    lambda: true
  stackTags:
    environment: dev
functions:
  RegisterNewUser:
    handler: handler.register
    description: Register new user service
    name: register
    environment:
      XRAY_ENABLED: true
      STAGE: dev
      DATABASE_URL: mongodb+srv://vishwakarma137:nQc7HjtfDSaB19Db@blog-app.a414a.mongodb.net/?retryWrites=true&w=majority&appName=Blog-App
      DB_NAME: blog-users
    events:
      - http:
          path:  api/v1.0/blogsite/user/register
          method: post
          private: false
          cors: true 
  GetAllUsers:
    handler: handler.getAllUsers
    description: Get all user Service
    name: get-all-users
    environment:
      XRAY_ENABLED: true
      STAGE: dev
      DATABASE_URL: mongodb+srv://vishwakarma137:nQc7HjtfDSaB19Db@blog-app.a414a.mongodb.net/?retryWrites=true&w=majority&appName=Blog-App
      DB_NAME: blog-users
    events:
      - http:
          path: api/v1.0/blogsite/user/getall
          method: get
          private: false
          cors: true
  GetUserByAuthId:
    handler: handler.getUserByAuthorId
    description: Get user by id Service
    name: get-user-by-auth-id
    environment:
      XRAY_ENABLED: true
      STAGE: dev
      DATABASE_URL: mongodb+srv://vishwakarma137:nQc7HjtfDSaB19Db@blog-app.a414a.mongodb.net/?retryWrites=true&w=majority&appName=Blog-App
      DB_NAME: blog-users
    events:
      - http:
          path: api/v1.0/blogsite/user/{id}
          method: get
          private: false
          cors: true                      
resources:
  Resources:
    GatewayResponseDefault4XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"
        ResponseType: DEFAULT_4XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
    GatewayResponseDEFAULT5XX:
      Type: 'AWS::ApiGateway::GatewayResponse'
      Properties:
        ResponseParameters:
          gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
          gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,Authorization'"
        ResponseType: DEFAULT_5XX
        RestApiId:
          Ref: 'ApiGatewayRestApi'
package:
  exclude:
    - coverage/**
    - test/**
    - package-lock.json
    - .npm/**
    - .idea/**
 
 